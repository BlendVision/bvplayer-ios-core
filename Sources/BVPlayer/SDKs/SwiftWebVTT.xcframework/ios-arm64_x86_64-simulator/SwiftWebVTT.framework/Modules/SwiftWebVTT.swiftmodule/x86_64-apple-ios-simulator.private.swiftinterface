// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target x86_64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name SwiftWebVTT
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
import Swift
import _Concurrency
import _StringProcessing
extension SwiftWebVTT.WebVTTParser {
  public static func deduplicateCues(_ cues: [SwiftWebVTT.WebVTT.Cue]) -> [SwiftWebVTT.WebVTT.Cue]
}
extension Swift.String {
  public func decodingHTMLEntities() -> Swift.String
}
public struct WebVTT {
  public struct Cue {
    public let timing: SwiftWebVTT.WebVTT.Timing
    public let text: Swift.String
  }
  public struct Timing {
    public let start: Swift.Int
    public let end: Swift.Int
  }
  public let cues: [SwiftWebVTT.WebVTT.Cue]
  public init(cues: [SwiftWebVTT.WebVTT.Cue])
}
extension SwiftWebVTT.WebVTT.Timing {
  public var duration: Swift.Int {
    get
  }
}
extension SwiftWebVTT.WebVTT.Cue {
  public var timeStart: Foundation.TimeInterval {
    get
  }
  public var timeEnd: Foundation.TimeInterval {
    get
  }
  public var duration: Foundation.TimeInterval {
    get
  }
}
public enum WebVTTError : Swift.Error {
  case invalidSignature
  public static func == (a: SwiftWebVTT.WebVTTError, b: SwiftWebVTT.WebVTTError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public class WebVTTParser {
  public init(string: Swift.String)
  public func parse() throws -> SwiftWebVTT.WebVTT
  @objc deinit
}
extension SwiftWebVTT.WebVTTError : Swift.Equatable {}
extension SwiftWebVTT.WebVTTError : Swift.Hashable {}
